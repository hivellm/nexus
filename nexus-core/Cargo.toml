[package]
name = "nexus-core"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
description = "Core graph database engine for Nexus - Property Graph with Cypher subset"

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(FALSE)'] }

[dependencies]
# Storage
memmap2.workspace = true
heed.workspace = true
parking_lot.workspace = true
roaring.workspace = true

# Indexes
tantivy.workspace = true
hnsw_rs.workspace = true

# Async
tokio.workspace = true

# Serialization
serde.workspace = true
serde_json.workspace = true
bincode.workspace = true
bytes.workspace = true
bytemuck.workspace = true
serde_millis = "0.1"

# Error handling
thiserror.workspace = true
anyhow.workspace = true

# Utilities
uuid.workspace = true
chrono.workspace = true
xxhash-rust = { version = "0.8", features = ["xxh3"] }
crc32fast = "1.4"
tempfile = "3.15"
rand.workspace = true
regex = "1.10"

# Authentication & Security
argon2 = "0.5"
base64 = "0.22"

# HTTP framework (for middleware)
axum = { version = "0.7", optional = true }

[dev-dependencies]
tokio = { workspace = true, features = ["test-util"] }
tempfile = "3.15"
criterion = { version = "0.5", features = ["html_reports"] }

[[bench]]
name = "graph_correlation_benchmark"
harness = false

[[bench]]
name = "vectorizer_extraction_benchmark"
harness = false

[[example]]
name = "hierarchical_call_graph_example"
path = "../examples/hierarchical_call_graph_example.rs"

[[example]]
name = "call_graph_filtering_example"
path = "../examples/call_graph_filtering_example.rs"